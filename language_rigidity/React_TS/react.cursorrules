When generating React component:

- Always use TypeScript.
- Avoid using any type.
- Always use Shadcn and Tailwind.
- Don't type React.FC on the component.
- use const instead of function for the component.
- The component must adhere to composable pattern of React.
- Don't overuse useState and useEffect hooks. Use computed state if possible.
- Use useMemo and useCallback when necessary to prevent unnecessary rendering.
- Use server action and useActionState if possible. Otherwise, use fetch and API route handler. When the component needs to do data mutation, make it so that it accepts server action as props.
- Create server component if possible. Otherwise, create client component.
- Use Suspense and streaming when possible.
- Always validate inputs using zod in the server action and API end point.
- When possible create a custom hook to group useState and useEffect that encapsulates certain logic.
- Create a higher order component when needed to add certain functionalities that are not completely coupled to the component.
- When makes sense, combine related components, hooks, functions in the same file so that it's easy to distribute and use.
- Text content must be HTML-escaped
